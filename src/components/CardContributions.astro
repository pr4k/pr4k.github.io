---
import type { ImageMetadata } from 'astro'
import { Icon } from 'astro-icon/components'
import { Picture } from 'astro:assets'
import '@styles/tech-colors.css'
import { fetchThumbnails } from '../scripts/utils'

interface Props {
  src: string
  alt: string
  title: string
  description: string
  techs: string[]
  repo: string
  repoLabel: string
  commits: string
}

const { src, alt, title, description, techs, repo, repoLabel, commits } =
  Astro.props

const { imagesData, nonImagesData } = await fetchThumbnails(techs)
---

<section class="card-contributions">
  <div>
    <a href={repo}>
      <Picture
        src={src}
        alt={alt}
        width={293}
        height={168}
        formats={['avif', 'webp']}
        fallbackFormat="webp"
      />
    </a>
  </div>
  <h3><a href={repo}>{title}</a></h3>
  <p>
    {description}
  </p>
  <div class="badges">
    {
      imagesData.map((linkObj: any) => {
        return (
          <span class={`badge-tech`}>
            <img src={linkObj.imageUrl} width={24} height={24} alt={'tech'} />
          </span>
        )
      })
    }
    {
      nonImagesData.map((labelObj: any) => {
        return (
          <span class={`badge-tech ${labelObj.slug}`}>
            <span>{labelObj.tech.toUpperCase()}</span>
          </span>
        )
      })
    }
    <!-- {
      techs.map((tech) => {
        const techLower = tech.toLowerCase().replaceAll(' ', '-')

        return (
          <span class={`badge-tech ${techLower}`}>
            <Icon name={`techs/${techLower}`} size={16} />
            <span>{tech}</span>
          </span>
        )
      })
    } -->
  </div>
  <div class="links">
    <a href={repo}>
      <Icon name="github" size={16} />
      {repoLabel}
    </a>
    <a href={commits}>
      <Icon name="link" size={16} />
      Commits
    </a>
  </div>
</section>

<style>
  .card-contributions {
    background-color: var(--bg-card-contributions);
    border: 1px solid var(--border-card-contributions-color);
    padding: 16px;
    border-radius: 4px;
    transition: var(--transition-bg), var(--transition-border);

    @media (width >= 768px) {
      max-width: 332px;
      margin-inline: auto;
    }

    & img {
      border-radius: 4px;
    }

    & h3 {
      & a {
        color: inherit;
        text-decoration: none;
        transition: var(--transition-text);

        &:hover {
          color: var(--text-description-color);
        }
      }
    }

    & p {
      color: var(--text-description-color);
      transition: var(--transition-text);
    }

    & .badges {
      display: flex;
      flex-wrap: wrap;
      gap: 12px 8px;

      & .badge-tech {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 4px 12px;
        border-radius: 1000px;
        font-size: 0.75rem;
      }
    }

    & .links {
      display: flex;
      align-items: center;
      gap: 8px;
      margin-top: 24px;

      & a {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        color: var(--text-color);
        text-decoration: none;
        font-weight: 500;
        font-size: 0.875rem;
        padding: 6px 16px;
        border-radius: 1000px;
        border: 1px solid var(--text-color);
        transition: var(--transition-bg), var(--transition-text),
          var(--transition-border);

        &:hover {
          background-color: var(--bg-secondary-color);
        }
      }
    }

    > * + *:not(:last-child) {
      margin-top: 16px;
    }
  }
</style>
