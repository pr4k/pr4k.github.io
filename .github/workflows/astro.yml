name: Deploy Astro site to Pages

on:
   push:
      branches: ["sourcev2"]
   workflow_dispatch: # Allows manual trigger from Actions tab

permissions:
   contents: read
   pages: write
   id-token: write

concurrency:
   group: "pages"
   cancel-in-progress: false

env:
   BUILD_PATH: "." # default value when not using subfolders

jobs:
   build:
      name: Build
      runs-on: ubuntu-latest

      steps:
         - name: Checkout Repository
           uses: actions/checkout@v4
           with:
              fetch-depth: 0 # Ensures full history for incremental builds

         - name: Detect Package Manager
           id: detect-package-manager
           run: |
              if [ -f "yarn.lock" ]; then
                echo "manager=yarn" >> $GITHUB_ENV
                echo "lockfile=yarn.lock" >> $GITHUB_ENV
              elif [ -f "package-lock.json" ]; then
                echo "manager=npm" >> $GITHUB_ENV
                echo "lockfile=package-lock.json" >> $GITHUB_ENV
              else
                echo "Unable to determine package manager"
                exit 1
              fi

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: "20"
              cache: ${{ env.manager }}
              cache-dependency-path: ${{ env.lockfile }}

         - name: Cache Astro Build Files
           uses: actions/cache@v4
           with:
              path: |
                 .astro/
                 node_modules/
              key: ${{ runner.os }}-astro-${{ github.sha }}
              restore-keys: |
                 ${{ runner.os }}-astro-

         - name: Setup GitHub Pages
           id: pages
           uses: actions/configure-pages@v5

         - name: Install Dependencies
           run: ${{ env.manager }} install
           working-directory: ${{ env.BUILD_PATH }}

         - name: Build with Astro (Incremental Build)
           run: |
              ${{ env.manager }} run build \
                --site "${{ steps.pages.outputs.origin }}" \
                --base "${{ steps.pages.outputs.base_path }}"
           working-directory: ${{ env.BUILD_PATH }}

         - name: Upload Artifact
           uses: actions/upload-pages-artifact@v3
           with:
              path: ${{ env.BUILD_PATH }}/dist

   deploy:
      name: Deploy
      needs: build
      runs-on: ubuntu-latest
      environment:
         name: github-pages
         url: ${{ steps.deployment.outputs.page_url }}

      steps:
         - name: Deploy to GitHub Pages
           id: deployment
           uses: actions/deploy-pages@v4
