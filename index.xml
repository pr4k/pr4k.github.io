<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020 Powered by Hugo | Theme Customized by pr4k</copyright>
    <lastBuildDate>Wed, 05 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo to Medium</title>
      <link>/blog/hugo-to-medium/</link>
      <pubDate>Mon, 09 Mar 2020 02:12:45 +0000</pubDate>
      
      <guid>/blog/hugo-to-medium/</guid>
      <description>Photo by Yancy Min on Unsplash Motivation So everytime I added a blog on my personal website (Which is very rare) I had to go to my medium profile and import it manually. So once I got to know about Github actions, the first idea was to automate this process. Also this project was an attempt to understand Github Actions better.
Description So what our action does is everytime I push my code to the github Repo with a special commit message, it takes the new post and use the Medium API and creates a new draft at my medium account.</description>
    </item>
    
    <item>
      <title>How to Create an Effective Readme</title>
      <link>/blog/readme/</link>
      <pubDate>Wed, 19 Feb 2020 23:22:15 +0000</pubDate>
      
      <guid>/blog/readme/</guid>
      <description>Photo by Helloquence on Unsplash
 As Harvey says, First Impression Lasts.
 Lets be honest even before trying any project on github the first thing we do is check their Readme. A better readme not only make your project look better and professional but also a well framed readme makes it easy for others to test and use your project. There are many projects out there which are not on trending just because there are not enough instructions to fire that up.</description>
    </item>
    
    <item>
      <title>How to Create a Stackoverflow Terminal Client - Go</title>
      <link>/blog/howto/</link>
      <pubDate>Sun, 09 Feb 2020 19:55:53 +0000</pubDate>
      
      <guid>/blog/howto/</guid>
      <description>Around a month ago I came across a project howdoi created in python. And honestly it was amazing, finding solution of basic problems without opening browser was a life saver, so I thought of creating one for myself. As one of my major goal was speed ,so I went with Go lang.
So today, let me show you how to use Stackoverflow using just a terminal.
 Create Go Environment I won&amp;rsquo;t go in details about how to install Go or how the directory structure should look.</description>
    </item>
    
    <item>
      <title>Creating A Blog In Hugo</title>
      <link>/blog/hugoblog/</link>
      <pubDate>Wed, 05 Feb 2020 22:39:53 +0000</pubDate>
      
      <guid>/blog/hugoblog/</guid>
      <description>Why Hugo Hugo is a great tool to generate static website but honestly it is a boring framework to work with. There&amp;rsquo;s no fancy technology, neither you can create any funky functions to fetch your Github repo Readme or any of your Medium articles.
It uses Go at its core which was the one and only reason for me to go with Hugo, though later I found out the benefits and features which makes it unique and perfect for creating simple static websites like this blog.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects on Github  Howto About: A CLI tool for stackoverflow to get answers for simple coding tasks directly from terminal. Wrtten purely in Go and a CI implemented using Travis-CI
 Go Travis-CI TermUI (Go Framework for UI)   Personal Blog About: A personal blog created using a static site builder Hugo , and a CI implemented using Travis-CI.
 Hugo Go Travis-CI  Online Judge About: This was a Backend for Online Judge which was never completed due to lack of frontend developer.</description>
    </item>
    
  </channel>
</rss>